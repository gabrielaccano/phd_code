aes(x = MDS1, y = MDS2, group = month, fill = as.factor(month)),
alpha = 0.1, color = "black") +
scale_fill_manual(values = okabe_ito_extended) +
scale_color_manual(values = okabe_ito_extended) +
stat_ellipse(data = matrix_scores, aes(x = MDS1, y = MDS2, color = month), level = 0.50) +
labs(title = paste("NMDS of nectar use for", species_name)) +
theme_minimal()
# Save objects to global environment if needed
assign(paste0(prefix, "_prep"), prep, envir = .GlobalEnv)
assign(paste0(prefix, "_dist_matrix"), dist_matrix, envir = .GlobalEnv)
assign(paste0(prefix, "_numeric_filtered"), numeric_filtered, envir = .GlobalEnv)
assign(paste0(prefix, "_nmds"), nmds, envir = .GlobalEnv)
assign(paste0(prefix, "_matrix_scores"), matrix_scores, envir = .GlobalEnv)
assign(paste0(prefix, "_hull_data_month"), hull_data_month, envir = .GlobalEnv)
return(p)
}
run_nmds_plot("ARCA")
run_nmds_plot("ARCA")
# Step 1: Filter and prep data
prep <- matrix_98_24 |>
filter(butterfly_species_cleaned == species_name) |>
filter(behavior == 3) |>
filter(!is.na(nectar_species_cleaned), field != "Boyer") |>
filter(nectar_species_cleaned== "NA", field != "MiddleCreek")
run_nmds_plot <- function(species_name) {
# Dynamically build variable names
prefix <- tolower(species_name)
# Step 1: Filter and prep data
prep <- matrix_98_24 |>
filter(butterfly_species_cleaned == species_name) |>
filter(behavior == 3) |>
filter(!is.na(nectar_species_cleaned), field != "Boyer") |>
filter(nectar_species_cleaned== "NA", field != "MiddleCreek")
dist_matrix <- prep |>
count(year, month, field, nectar_species_cleaned) |>
pivot_wider(names_from = nectar_species_cleaned,
values_from = n,
values_fill = list(n = 0))
rownames(dist_matrix) <- paste(dist_matrix$year, dist_matrix$month, dist_matrix$field, sep = "_")
numeric_only <- as.data.frame(dist_matrix[, !(names(dist_matrix) %in% c("year", "month", "field"))])
rownames(numeric_only) <- rownames(dist_matrix)
nectar_counts <- colSums(numeric_only != 0)
keep_cols <- nectar_counts >= 10
filtered_outliers <- numeric_only[, keep_cols]
row_sums <- rowSums(filtered_outliers, na.rm = TRUE)
keep_rows <- row_sums >= 5
numeric_filtered <- filtered_outliers[keep_rows, ]
# Step 2: NMDS
set.seed(82402)
nmds <- metaMDS(numeric_filtered,
distance = "bray",
wascores = TRUE,
trymax = 500,
autotransform = FALSE)
nmds_points <- as.data.frame(nmds$points)
numeric_filtered$combo_id <- rownames(numeric_filtered)
parts <- do.call(rbind, strsplit(numeric_filtered$combo_id, "_"))
colnames(parts) <- c("year", "month", "field")
matrix_scores <- cbind(parts, nmds_points)
# Convex hulls by month
hull_data_month <- matrix_scores |>
group_by(month) |>
slice(chull(MDS1, MDS2))
# Colors
okabe_ito_extended <- c("#E69F00", "#56B4E9", "#009E73", "#F0E442",
"#0072B2", "#D55E00", "#CC79A7", "#999999")
# Plot
p <- ggplot() +
geom_point(data = matrix_scores, aes(x = MDS1, y = MDS2, color = as.factor(month), shape = as.factor(month)),
size = 3) +
geom_polygon(data = hull_data_month,
aes(x = MDS1, y = MDS2, group = month, fill = as.factor(month)),
alpha = 0.1, color = "black") +
scale_fill_manual(values = okabe_ito_extended) +
scale_color_manual(values = okabe_ito_extended) +
stat_ellipse(data = matrix_scores, aes(x = MDS1, y = MDS2, color = month), level = 0.50) +
labs(title = paste("NMDS of nectar use for", species_name)) +
theme_minimal()
# Save objects to global environment if needed
assign(paste0(prefix, "_prep"), prep, envir = .GlobalEnv)
assign(paste0(prefix, "_dist_matrix"), dist_matrix, envir = .GlobalEnv)
assign(paste0(prefix, "_numeric_filtered"), numeric_filtered, envir = .GlobalEnv)
assign(paste0(prefix, "_nmds"), nmds, envir = .GlobalEnv)
assign(paste0(prefix, "_matrix_scores"), matrix_scores, envir = .GlobalEnv)
assign(paste0(prefix, "_hull_data_month"), hull_data_month, envir = .GlobalEnv)
return(p)
}
run_nmds_plot("ARCA")
run_nmds_plot <- function(species_name) {
# Dynamically build variable names
prefix <- tolower(species_name)
# Step 1: Filter and prep data
prep <- matrix_98_24 |>
filter(butterfly_species_cleaned == species_name) |>
filter(behavior == 3) |>
filter(!is.na(nectar_species_cleaned), field != "Boyer") |>
filter(nectar_species_cleaned!= "NA", field != "MiddleCreek")
dist_matrix <- prep |>
count(year, month, field, nectar_species_cleaned) |>
pivot_wider(names_from = nectar_species_cleaned,
values_from = n,
values_fill = list(n = 0))
rownames(dist_matrix) <- paste(dist_matrix$year, dist_matrix$month, dist_matrix$field, sep = "_")
numeric_only <- as.data.frame(dist_matrix[, !(names(dist_matrix) %in% c("year", "month", "field"))])
rownames(numeric_only) <- rownames(dist_matrix)
nectar_counts <- colSums(numeric_only != 0)
keep_cols <- nectar_counts >= 10
filtered_outliers <- numeric_only[, keep_cols]
row_sums <- rowSums(filtered_outliers, na.rm = TRUE)
keep_rows <- row_sums >= 5
numeric_filtered <- filtered_outliers[keep_rows, ]
# Step 2: NMDS
set.seed(82402)
nmds <- metaMDS(numeric_filtered,
distance = "bray",
wascores = TRUE,
trymax = 500,
autotransform = FALSE)
nmds_points <- as.data.frame(nmds$points)
numeric_filtered$combo_id <- rownames(numeric_filtered)
parts <- do.call(rbind, strsplit(numeric_filtered$combo_id, "_"))
colnames(parts) <- c("year", "month", "field")
matrix_scores <- cbind(parts, nmds_points)
# Convex hulls by month
hull_data_month <- matrix_scores |>
group_by(month) |>
slice(chull(MDS1, MDS2))
# Colors
okabe_ito_extended <- c("#E69F00", "#56B4E9", "#009E73", "#F0E442",
"#0072B2", "#D55E00", "#CC79A7", "#999999")
# Plot
p <- ggplot() +
geom_point(data = matrix_scores, aes(x = MDS1, y = MDS2, color = as.factor(month), shape = as.factor(month)),
size = 3) +
geom_polygon(data = hull_data_month,
aes(x = MDS1, y = MDS2, group = month, fill = as.factor(month)),
alpha = 0.1, color = "black") +
scale_fill_manual(values = okabe_ito_extended) +
scale_color_manual(values = okabe_ito_extended) +
stat_ellipse(data = matrix_scores, aes(x = MDS1, y = MDS2, color = month), level = 0.50) +
labs(title = paste("NMDS of nectar use for", species_name)) +
theme_minimal()
# Save objects to global environment if needed
assign(paste0(prefix, "_prep"), prep, envir = .GlobalEnv)
assign(paste0(prefix, "_dist_matrix"), dist_matrix, envir = .GlobalEnv)
assign(paste0(prefix, "_numeric_filtered"), numeric_filtered, envir = .GlobalEnv)
assign(paste0(prefix, "_nmds"), nmds, envir = .GlobalEnv)
assign(paste0(prefix, "_matrix_scores"), matrix_scores, envir = .GlobalEnv)
assign(paste0(prefix, "_hull_data_month"), hull_data_month, envir = .GlobalEnv)
return(p)
}
run_nmds_plot("ARCA")
View(arca_numeric_filtered)
view(arca_numeric_filtered %>%
filter(grepl("^\\d{4}_(5|05)_", combo_id)))
view(arca_prep %>%
filter(nectar_species_cleaned=="CIDI"))
view(arca_prep %>%
filter(nectar_species_cleaned=="CIDI", year =="2013"))
view(arca_prep %>%
filter(nectar_species_cleaned=="CIDI", year =="2013", month== 5))
View(arca_numeric_filtered)
View(arca_prep)
view(arca_prep %>% filter(month== 5))
arca_plant_scores<-scores(arca_nmds, display= "species")
arca_plant_df<-as.data.frame(arca_plant_scores)
arca_plant_df$nectar_species_cleaned<-rownames(arca_plant_df)
ggplot() +
geom_point(data = arca_matrix_scores, aes(x = MDS1, y = MDS2, color = as.factor(month), shape = as.factor(month)),
size = 3) +
geom_label(data= arca_plant_df, aes(x= NMDS1, y=NMDS2, label= nectar_species_cleaned))+
geom_polygon(data = arca_hull_data_month,
aes(x = MDS1, y = MDS2, group = month, fill = as.factor(month)),
alpha = 0.1, color = "black") +
scale_fill_manual(values = okabe_ito_extended) +
scale_color_manual(values = okabe_ito_extended) +
stat_ellipse(data = arid_matrix_scores, aes(x = MDS1, y = MDS2, color = month), level = 0.95) +
theme_minimal()+
labs(title= "NMDS of nectar plant use by GSA", color= "Month", shape= "Month", fill= "Month")
ggplot() +
geom_point(data = arca_matrix_scores, aes(x = MDS1, y = MDS2, color = as.factor(month), shape = as.factor(month)),
size = 3) +
geom_label(data= arca_plant_df, aes(x= NMDS1, y=NMDS2, label= nectar_species_cleaned))+
geom_polygon(data = arca_hull_data_month,
aes(x = MDS1, y = MDS2, group = month, fill = as.factor(month)),
alpha = 0.1, color = "black") +
scale_fill_manual(values = okabe_ito_extended) +
scale_color_manual(values = okabe_ito_extended) +
stat_ellipse(data = arca_matrix_scores, aes(x = MDS1, y = MDS2, color = month), level = 0.95) +
theme_minimal()+
labs(title= "NMDS of nectar plant use by GSA", color= "Month", shape= "Month", fill= "Month")
run_nmds_plot("DAPL")
ggplot() +
geom_point(data = dapl_matrix_scores, aes(x = MDS1, y = MDS2, color = as.factor(month), shape = as.factor(month)),
size = 3) +
geom_label(data= dapl_plant_df, aes(x= NMDS1, y=NMDS2, label= nectar_species_cleaned))+
geom_polygon(data = dapl_hull_data_month,
aes(x = MDS1, y = MDS2, group = month, fill = as.factor(month)),
alpha = 0.1, color = "black") +
scale_fill_manual(values = okabe_ito_extended) +
scale_color_manual(values = okabe_ito_extended) +
stat_ellipse(data = dapl_matrix_scores, aes(x = MDS1, y = MDS2, color = month), level = 0.95) +
labs(title = "NMDS of nectar use for Monarch") +
theme_minimal()+
labs(color= "Month", shape= "Month", fill= "Month")
dapl_plant_scores<-scores(dapl_nmds, display= "species")
dapl_plant_df<-as.data.frame(dapl_plant_scores)
dapl_plant_df$nectar_species_cleaned<-rownames(dapl_plant_df)
ggplot() +
geom_point(data = dapl_matrix_scores, aes(x = MDS1, y = MDS2, color = as.factor(month), shape = as.factor(month)),
size = 3) +
geom_label(data= dapl_plant_df, aes(x= NMDS1, y=NMDS2, label= nectar_species_cleaned))+
geom_polygon(data = dapl_hull_data_month,
aes(x = MDS1, y = MDS2, group = month, fill = as.factor(month)),
alpha = 0.1, color = "black") +
scale_fill_manual(values = okabe_ito_extended) +
scale_color_manual(values = okabe_ito_extended) +
stat_ellipse(data = dapl_matrix_scores, aes(x = MDS1, y = MDS2, color = month), level = 0.95) +
labs(title = "NMDS of nectar use for Monarch") +
theme_minimal()+
labs(color= "Month", shape= "Month", fill= "Month")
run_nmds_plot("EPCL")
run_nmds_plot <- function(species_name) {
# Dynamically build variable names
prefix <- tolower(species_name)
# Step 1: Filter and prep data
prep <- matrix_98_24 |>
filter(butterfly_species_cleaned == species_name) |>
filter(behavior == 3) |>
filter(!is.na(nectar_species_cleaned), field != "Boyer") |>
filter(nectar_species_cleaned!= "NA", field != "MiddleCreek")
dist_matrix <- prep |>
count(year, month, field, nectar_species_cleaned) |>
pivot_wider(names_from = nectar_species_cleaned,
values_from = n,
values_fill = list(n = 0))
rownames(dist_matrix) <- paste(dist_matrix$year, dist_matrix$month, dist_matrix$field, sep = "_")
numeric_only <- as.data.frame(dist_matrix[, !(names(dist_matrix) %in% c("year", "month", "field"))])
rownames(numeric_only) <- rownames(dist_matrix)
nectar_counts <- colSums(numeric_only != 0)
keep_cols <- nectar_counts >= 10
filtered_outliers <- numeric_only[, keep_cols]
row_sums <- rowSums(filtered_outliers, na.rm = TRUE)
keep_rows <- row_sums >= 5
numeric_filtered <- filtered_outliers[keep_rows, ]
# Step 2: NMDS
set.seed(82402)
nmds <- metaMDS(numeric_filtered,
distance = "bray",
wascores = TRUE,
trymax = 500,
autotransform = FALSE)
nmds_points <- as.data.frame(nmds$points)
numeric_filtered$combo_id <- rownames(numeric_filtered)
parts <- do.call(rbind, strsplit(numeric_filtered$combo_id, "_"))
colnames(parts) <- c("year", "month", "field")
matrix_scores <- cbind(parts, nmds_points)
# Convex hulls by month
hull_data_month <- matrix_scores |>
group_by(month) |>
slice(chull(MDS1, MDS2))
# Colors
okabe_ito_extended <- c("#E69F00", "#56B4E9", "#009E73", "#F0E442",
"#0072B2", "#D55E00", "#CC79A7", "#999999")
#plant scores
plant_scores<-scores(dapl_nmds, display= "species")
plant_df<-as.data.frame(dapl_plant_scores)
plant_df$nectar_species_cleaned<-rownames(dapl_plant_df)
# Plot
p <- ggplot() +
geom_point(data = matrix_scores, aes(x = MDS1, y = MDS2, color = as.factor(month), shape = as.factor(month)),
size = 3) +
geom_label(data= plant_df, aes(x= NMDS1, y=NMDS2, label= nectar_species_cleaned))+
geom_polygon(data = hull_data_month,
aes(x = MDS1, y = MDS2, group = month, fill = as.factor(month)),
alpha = 0.1, color = "black") +
scale_fill_manual(values = okabe_ito_extended) +
scale_color_manual(values = okabe_ito_extended) +
stat_ellipse(data = matrix_scores, aes(x = MDS1, y = MDS2, color = month), level = 0.50) +
labs(title = paste("NMDS of nectar use for", species_name)) +
theme_minimal()
# Save objects to global environment if needed
assign(paste0(prefix, "_prep"), prep, envir = .GlobalEnv)
assign(paste0(prefix, "_dist_matrix"), dist_matrix, envir = .GlobalEnv)
assign(paste0(prefix, "_numeric_filtered"), numeric_filtered, envir = .GlobalEnv)
assign(paste0(prefix, "_nmds"), nmds, envir = .GlobalEnv)
assign(paste0(prefix, "_matrix_scores"), matrix_scores, envir = .GlobalEnv)
assign(paste0(prefix, "_hull_data_month"), hull_data_month, envir = .GlobalEnv)
return(p)
}
run_nmds_plot("EPCL")
run_nmds_plot <- function(species_name) {
# Dynamically build variable names
prefix <- tolower(species_name)
# Step 1: Filter and prep data
prep <- matrix_98_24 |>
filter(butterfly_species_cleaned == species_name) |>
filter(behavior == 3) |>
filter(!is.na(nectar_species_cleaned), field != "Boyer") |>
filter(nectar_species_cleaned!= "NA", field != "MiddleCreek")
dist_matrix <- prep |>
count(year, month, field, nectar_species_cleaned) |>
pivot_wider(names_from = nectar_species_cleaned,
values_from = n,
values_fill = list(n = 0))
rownames(dist_matrix) <- paste(dist_matrix$year, dist_matrix$month, dist_matrix$field, sep = "_")
numeric_only <- as.data.frame(dist_matrix[, !(names(dist_matrix) %in% c("year", "month", "field"))])
rownames(numeric_only) <- rownames(dist_matrix)
nectar_counts <- colSums(numeric_only != 0)
keep_cols <- nectar_counts >= 10
filtered_outliers <- numeric_only[, keep_cols]
row_sums <- rowSums(filtered_outliers, na.rm = TRUE)
keep_rows <- row_sums >= 5
numeric_filtered <- filtered_outliers[keep_rows, ]
# Step 2: NMDS
set.seed(82402)
nmds <- metaMDS(numeric_filtered,
distance = "bray",
wascores = TRUE,
trymax = 500,
autotransform = FALSE)
nmds_points <- as.data.frame(nmds$points)
numeric_filtered$combo_id <- rownames(numeric_filtered)
parts <- do.call(rbind, strsplit(numeric_filtered$combo_id, "_"))
colnames(parts) <- c("year", "month", "field")
matrix_scores <- cbind(parts, nmds_points)
# Convex hulls by month
hull_data_month <- matrix_scores |>
group_by(month) |>
slice(chull(MDS1, MDS2))
# Colors
okabe_ito_extended <- c("#E69F00", "#56B4E9", "#009E73", "#F0E442",
"#0072B2", "#D55E00", "#CC79A7", "#999999")
#plant scores
plant_scores<-scores(dapl_nmds, display= "species")
plant_df<-as.data.frame(dapl_plant_scores)
plant_df$nectar_species_cleaned<-rownames(dapl_plant_df)
# Plot
p <- ggplot() +
geom_point(data = matrix_scores, aes(x = MDS1, y = MDS2, color = as.factor(month), shape = as.factor(month)),
size = 3) +
geom_label(data= plant_df, aes(x= NMDS1, y=NMDS2, label= nectar_species_cleaned))+
geom_polygon(data = hull_data_month,
aes(x = MDS1, y = MDS2, group = month, fill = as.factor(month)),
alpha = 0.1, color = "black") +
scale_fill_manual(values = okabe_ito_extended) +
scale_color_manual(values = okabe_ito_extended) +
stat_ellipse(data = matrix_scores, aes(x = MDS1, y = MDS2, color = month), level = 0.50) +
labs(title = paste("NMDS of nectar use for", species_name)) +
theme_minimal()
# Save objects to global environment if needed
assign(paste0(prefix, "_prep"), prep, envir = .GlobalEnv)
assign(paste0(prefix, "_dist_matrix"), dist_matrix, envir = .GlobalEnv)
assign(paste0(prefix, "_numeric_filtered"), numeric_filtered, envir = .GlobalEnv)
assign(paste0(prefix, "_nmds"), nmds, envir = .GlobalEnv)
assign(paste0(prefix, "_matrix_scores"), matrix_scores, envir = .GlobalEnv)
assign(paste0(prefix, "_hull_data_month"), hull_data_month, envir = .GlobalEnv)
assign(paste0(prefix, "_plant_scores"), plant_scores, envir = .GlobalEnv)
assign(paste0(prefix, "_plant_df"), plant_df, envir = .GlobalEnv)
return(p)
}
run_nmds_plot("EPCL")
View(epcl_plant_df)
View(dapl_plant_df)
run_nmds_plot("PAGL")
run_nmds_plot("PATR")
View(patr_dist_matrix)
View(patr_numeric_filtered)
run_nmds_plot <- function(species_name) {
# Dynamically build variable names
prefix <- tolower(species_name)
# Step 1: Filter and prep data
prep <- matrix_98_24 |>
filter(butterfly_species_cleaned == species_name) |>
filter(behavior == 3) |>
filter(!is.na(nectar_species_cleaned), field != "Boyer") |>
filter(nectar_species_cleaned!= "NA", field != "Middle Creek")
dist_matrix <- prep |>
count(year, month, field, nectar_species_cleaned) |>
pivot_wider(names_from = nectar_species_cleaned,
values_from = n,
values_fill = list(n = 0))
rownames(dist_matrix) <- paste(dist_matrix$year, dist_matrix$month, dist_matrix$field, sep = "_")
numeric_only <- as.data.frame(dist_matrix[, !(names(dist_matrix) %in% c("year", "month", "field"))])
rownames(numeric_only) <- rownames(dist_matrix)
nectar_counts <- colSums(numeric_only != 0)
keep_cols <- nectar_counts >= 10
filtered_outliers <- numeric_only[, keep_cols]
row_sums <- rowSums(filtered_outliers, na.rm = TRUE)
keep_rows <- row_sums >= 5
numeric_filtered <- filtered_outliers[keep_rows, ]
# Step 2: NMDS
set.seed(82402)
nmds <- metaMDS(numeric_filtered,
distance = "bray",
wascores = TRUE,
trymax = 500,
autotransform = FALSE)
nmds_points <- as.data.frame(nmds$points)
numeric_filtered$combo_id <- rownames(numeric_filtered)
parts <- do.call(rbind, strsplit(numeric_filtered$combo_id, "_"))
colnames(parts) <- c("year", "month", "field")
matrix_scores <- cbind(parts, nmds_points)
# Convex hulls by month
hull_data_month <- matrix_scores |>
group_by(month) |>
slice(chull(MDS1, MDS2))
# Colors
okabe_ito_extended <- c("#E69F00", "#56B4E9", "#009E73", "#F0E442",
"#0072B2", "#D55E00", "#CC79A7", "#999999")
#plant scores
plant_scores<-scores(dapl_nmds, display= "species")
plant_df<-as.data.frame(dapl_plant_scores)
plant_df$nectar_species_cleaned<-rownames(dapl_plant_df)
# Plot
p <- ggplot() +
geom_point(data = matrix_scores, aes(x = MDS1, y = MDS2, color = as.factor(month), shape = as.factor(month)),
size = 3) +
geom_label(data= plant_df, aes(x= NMDS1, y=NMDS2, label= nectar_species_cleaned))+
geom_polygon(data = hull_data_month,
aes(x = MDS1, y = MDS2, group = month, fill = as.factor(month)),
alpha = 0.1, color = "black") +
scale_fill_manual(values = okabe_ito_extended) +
scale_color_manual(values = okabe_ito_extended) +
stat_ellipse(data = matrix_scores, aes(x = MDS1, y = MDS2, color = month), level = 0.50) +
labs(title = paste("NMDS of nectar use for", species_name)) +
theme_minimal()
# Save objects to global environment if needed
assign(paste0(prefix, "_prep"), prep, envir = .GlobalEnv)
assign(paste0(prefix, "_dist_matrix"), dist_matrix, envir = .GlobalEnv)
assign(paste0(prefix, "_numeric_filtered"), numeric_filtered, envir = .GlobalEnv)
assign(paste0(prefix, "_nmds"), nmds, envir = .GlobalEnv)
assign(paste0(prefix, "_matrix_scores"), matrix_scores, envir = .GlobalEnv)
assign(paste0(prefix, "_hull_data_month"), hull_data_month, envir = .GlobalEnv)
assign(paste0(prefix, "_plant_scores"), plant_scores, envir = .GlobalEnv)
assign(paste0(prefix, "_plant_df"), plant_df, envir = .GlobalEnv)
return(p)
}
run_nmds_plot("PATR")
View(patr_nmds)
View(patr_matrix_scores)
patr_matrix_scores %>%
filter(MDS1>-6)
patr_matrix_scores %>%
filter(MDS1>-6)
ggplot() +
geom_point(data = patr_matrix_scores, aes(x = MDS1, y = MDS2, color = as.factor(month), shape = as.factor(month)),
size = 3) +
geom_label(data= patr_plant_df, aes(x= NMDS1, y=NMDS2, label= nectar_species_cleaned))+
geom_polygon(data = patr_hull_data_month,
aes(x = MDS1, y = MDS2, group = month, fill = as.factor(month)),
alpha = 0.1, color = "black") +
scale_fill_manual(values = okabe_ito_extended) +
scale_color_manual(values = okabe_ito_extended) +
stat_ellipse(data = patr_matrix_scores, aes(x = MDS1, y = MDS2, color = month), level = 0.95) +
labs(title = "NMDS of nectar use for patr") +
theme_minimal()+
labs(color= "Month", shape= "Month", fill= "Month")
patr_matrix_scores<-patr_matrix_scores %>%
filter(MDS1>-6)
ggplot() +
geom_point(data = patr_matrix_scores, aes(x = MDS1, y = MDS2, color = as.factor(month), shape = as.factor(month)),
size = 3) +
geom_label(data= patr_plant_df, aes(x= NMDS1, y=NMDS2, label= nectar_species_cleaned))+
geom_polygon(data = patr_hull_data_month,
aes(x = MDS1, y = MDS2, group = month, fill = as.factor(month)),
alpha = 0.1, color = "black") +
scale_fill_manual(values = okabe_ito_extended) +
scale_color_manual(values = okabe_ito_extended) +
stat_ellipse(data = patr_matrix_scores, aes(x = MDS1, y = MDS2, color = month), level = 0.95) +
labs(title = "NMDS of nectar use for patr") +
theme_minimal()+
labs(color= "Month", shape= "Month", fill= "Month")
ggplot() +
geom_point(data = patr_matrix_scores, aes(x = MDS1, y = MDS2, color = as.factor(month), shape = as.factor(month)),
size = 3) +
geom_label(data= patr_plant_df, aes(x= NMDS1, y=NMDS2, label= nectar_species_cleaned))+
#geom_polygon(data = patr_hull_data_month,
#aes(x = MDS1, y = MDS2, group = month, fill = as.factor(month)),
#alpha = 0.1, color = "black") +
scale_fill_manual(values = okabe_ito_extended) +
scale_color_manual(values = okabe_ito_extended) +
stat_ellipse(data = patr_matrix_scores, aes(x = MDS1, y = MDS2, color = month), level = 0.95) +
labs(title = "NMDS of nectar use for patr") +
theme_minimal()+
labs(color= "Month", shape= "Month", fill= "Month")
ggplot() +
geom_point(data = patr_matrix_scores, aes(x = MDS1, y = MDS2, color = as.factor(month), shape = as.factor(month)),
size = 3) +
#geom_label(data= patr_plant_df, aes(x= NMDS1, y=NMDS2, label= nectar_species_cleaned))+
#geom_polygon(data = patr_hull_data_month,
#aes(x = MDS1, y = MDS2, group = month, fill = as.factor(month)),
#alpha = 0.1, color = "black") +
scale_fill_manual(values = okabe_ito_extended) +
scale_color_manual(values = okabe_ito_extended) +
stat_ellipse(data = patr_matrix_scores, aes(x = MDS1, y = MDS2, color = month), level = 0.95) +
labs(title = "NMDS of nectar use for patr") +
theme_minimal()+
labs(color= "Month", shape= "Month", fill= "Month")
patr_parts <- do.call(rbind, strsplit(patr_numeric_filtered$combo_id, "_"))
patr_primer<- cbind(patr_parts, patr_numeric_filtered)
write.xlsx(patr_primer, "C:/Users/GCano/OneDrive - Temple University/patr_primer.xlsx")
library(writexl)
write.xlsx(patr_primer, "C:/Users/GCano/OneDrive - Temple University/patr_primer.xlsx")
write_xlsx(patr_primer, "C:/Users/GCano/OneDrive - Temple University/patr_primer.xlsx")
write_xlsx(patr_primer, "C:/Users/tut43799/OneDrive - Temple University/Documents/GitHub/phd_code/patr_primer.xlsx")
View(patr_numeric_filtered)
# Then separate that column back into original parts
dapl_parts <- do.call(rbind, strsplit(dapl_numeric_filtered$combo_id, "_"))
colnames(dapl_parts) <- c("year", "month", "field")
dapl_primer<- cbind(dapl_parts, dapl_numeric_filtered)
write_xlsx(dapl_primer, "C:/Users/tut43799/OneDrive - Temple University/Documents/GitHub/phd_code/dapl_primer.xlsx")
