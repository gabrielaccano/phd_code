library(readr)
updated_matrix <- read_csv("updated_matrix.csv")
View(updated_matrix)
behavior_freq <- updated_matrix %>%
group_by(Julian, Behavior) %>%
summarise(frequency = n()) %>%
ungroup()
library(dplyr)
library(ggplot2)
library(tidyverse)
behavior_freq <- updated_matrix %>%
group_by(Julian, Behavior) %>%
summarise(frequency = n()) %>%
ungroup()
# Create the plot
ggplot(behavior_freq, aes(x = Julian, y = frequency, color = as.factor(Behavior))) +
geom_line() +  # Line plot for frequencies
labs(title = "Behavior Frequency by Julian Day",
x = "Julian Day",
y = "Frequency",
color = "Behavior") +
theme_minimal() +
scale_color_discrete(name = "Behavior")
ggplot(behavior_freq, aes(x = Julian, y = frequency, color = as.factor(behavior), group = behavior)) +
geom_line(size = 1.2, alpha = 0.8) +  # Thicker lines with slight transparency
geom_point(size = 2, alpha = 0.8) +    # Add points for each behavior occurrence
labs(title = "Behavior Frequency by Julian Day",
x = "Julian Day",
y = "Frequency",
color = "Behavior") +
theme_minimal() +
scale_color_brewer(palette = "Set1") +  # Use a distinct color palette for better visibility
theme(legend.position = "right") +      # Move the legend to the right for clarity
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(behavior_freq, aes(x = Julian, y = frequency, color = as.factor(Behavior), group = Behavior)) +
geom_line(size = 1.2, alpha = 0.8) +  # Thicker lines with slight transparency
geom_point(size = 2, alpha = 0.8) +    # Add points for each behavior occurrence
labs(title = "Behavior Frequency by Julian Day",
x = "Julian Day",
y = "Frequency",
color = "Behavior") +
theme_minimal() +
scale_color_brewer(palette = "Set1") +  # Use a distinct color palette for better visibility
theme(legend.position = "right") +      # Move the legend to the right for clarity
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(behavior_freq, aes(x = Julian, y = frequency, color = as.factor(Behavior), group = Behavior)) +
geom_line(size = 1, alpha = 0.8) +  # Thicker lines with slight transparency
geom_point(size = 1, alpha = 0.8) +    # Add points for each behavior occurrence
labs(title = "Behavior Frequency by Julian Day",
x = "Julian Day",
y = "Frequency",
color = "Behavior") +
theme_minimal() +
scale_color_brewer(palette = "Set1") +  # Use a distinct color palette for better visibility
theme(legend.position = "right") +      # Move the legend to the right for clarity
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(behavior_freq, aes(x = Julian, y = frequency, color = as.factor(Behavior), group = Behavior)) +
geom_line(size = .75, alpha = 0.8) +  # Thicker lines with slight transparency
geom_point(size = 1, alpha = 0.8) +    # Add points for each behavior occurrence
labs(title = "Behavior Frequency by Julian Day",
x = "Julian Day",
y = "Frequency",
color = "Behavior") +
theme_minimal() +
scale_color_brewer(palette = "Set1") +  # Use a distinct color palette for better visibility
theme(legend.position = "right") +      # Move the legend to the right for clarity
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(behavior_freq, aes(x = Julian, y = frequency, color = as.factor(Behavior), group = Behavior)) +
geom_line(size = .75, alpha = 0.8) +  # Thicker lines with slight transparency
# Add points for each behavior occurrence
labs(title = "Behavior Frequency by Julian Day",
x = "Julian Day",
y = "Frequency",
color = "Behavior") +
theme_minimal() +
scale_color_brewer(palette = "Set1") +  # Use a distinct color palette for better visibility
theme(legend.position = "right") +      # Move the legend to the right for clarity
theme(axis.text.x = element_text(angle = 45, hjust = 1))
regal_repro_df<- updated_matrix |> filter (butterfly_species =="REFR" & Behavior %in% c(6,8))
regal_df<- updated_matrix |>
filter(butterfly_species= "REFR")
regal_df<- updated_matrix |>
filter(butterfly_species== "REFR")
regal_behavior_freq <- regal_df %>%
group_by(Julian, Behavior) %>%
summarise(frequency = n()) %>%
ungroup()
ggplot(regal_behavior_freq, aes(x = Julian, y = frequency, color = as.factor(Behavior), group = Behavior)) +
geom_line(size = .75, alpha = 0.8) +  # Thicker lines with slight transparency
# Add points for each behavior occurrence
labs(title = "Behavior Frequency by Julian Day",
x = "Julian Day",
y = "Frequency",
color = "Behavior") +
theme_minimal() +
scale_color_brewer(palette = "Set1") +  # Use a distinct color palette for better visibility
theme(legend.position = "right") +      # Move the legend to the right for clarity
theme(axis.text.x = element_text(angle = 45, hjust = 1))
#Look at flowers regals are using
library(tidyverse)
regal_df<- week_matrix |>
filter(butterfly_species== "ARID")
